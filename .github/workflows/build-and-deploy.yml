on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: 프로젝트 빌드
    runs-on: ubuntu-latest

    steps:
      - name: 서브 모듈 확인
        uses: actions/checkout@v3
        with:
          token: ${{secrets.CONFIG_SUBMODULE_TOKEN}}
          submodules: true

      - name: 디스크 공간 확보
        run: |
          echo "Before cleanup:"
          df -h
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/share/swift
          echo "After cleanup:"
          df -h

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 실행 권한 부여
        run: chmod +x gradlew

      - name: 프로젝트 클린
        run: ./gradlew clean --no-daemon

      - name: 프로젝트 빌드
        run: ./gradlew build -x test --no-daemon --refresh-dependencies -Dorg.gradle.daemon=false

      - name: 생성된 JAR 파일 저장
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            **/build/libs/*.jar
  deploy:
    name: EC2에 배포
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Repository 확인
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: SSH를 통해 EC2 배포
        env:
          SERVER_HOST: ${{ secrets.EC2_HOST }}
          SERVER_USER: ${{ secrets.EC2_USER }}
          SERVER_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo "${SERVER_KEY}" > ec2-key.pem
          chmod 600 ec2-key.pem
          
          scp -i ec2-key.pem **/build/libs/*.jar ${SERVER_USER}@${SERVER_HOST}:/home/${SERVER_USER}/app.jar
          
          ssh -i ec2-key.pem ${SERVER_USER}@${SERVER_HOST} <<EOF
          # Stop the running application
          if sudo systemctl is-active --quiet my-application.service; then
              sudo systemctl stop my-application.service
          fi
          
          sudo systemctl start my-application.service
          EOF